{"ast":null,"code":"var _jsxFileName = \"/home/zen/projects/steel-foundry/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions.js\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors.js\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component.jsx\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container.jsx\";\nimport CollectionPage from \"../collection/collection.component.jsx\";\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded,\n          match = _this$props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/zen/projects/steel-foundry/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionsLoaded","WithSpinner","CollectionsOverviewContainer","CollectionPage","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","isCollectionsLoaded","match","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,kCAA3C;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AAEA,OAAOC,WAAP,MAAwB,0DAAxB;AAEA,OAAOC,4BAAP,MAAyC,0EAAzC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AAEA,MAAMC,yBAAyB,GAAGH,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAME,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVR,0BADU,GACqB,KAAKS,KAD1B,CACVT,0BADU;AAElBA,IAAAA,0BAA0B;AAC3B;;AACDU,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACCE,mBADD,eACCA,mBADD;AAAA,UACsBC,KADtB,eACsBA,KADtB;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAEV,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAACE;AADd,SAEMF,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAkBD;;AAzBoC;;AA4BvC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC/CY,EAAAA,mBAAmB,EAAEV;AAD0B,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CACpBgB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbT,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions.js\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors.js\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component.jsx\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container.jsx\";\nimport CollectionPage from \"../collection/collection.component.jsx\";\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  render() {\n    const { isCollectionsLoaded, match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={!isCollectionsLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}