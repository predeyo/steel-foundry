{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types.js\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils.js\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(`I'm on Fire! :)`);\n  const collectionRef = firestore.collection(\"collections\");\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/zen/projects/steel-foundry/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,eAAP,MAA4B,iBAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAa,iBAAb,CAAN;AAEA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACAD,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN1B;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbC,eAAe,CAACmB,uBADH,EAEbhB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\n\nimport ShopActionTypes from \"./shop.types.js\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils.js\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(`I'm on Fire! :)`);\n\n  const collectionRef = firestore.collection(\"collections\");\n  collectionRef\n    .get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}